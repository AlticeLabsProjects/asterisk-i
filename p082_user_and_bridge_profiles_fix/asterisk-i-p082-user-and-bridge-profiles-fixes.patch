diff --exclude='*.xml' --exclude='*.o.d' --exclude=.project --exclude=.cproject -Naur asterisk-base-11.3.0/apps/confbridge/conf_config_parser.c asterisk-11.3.0/apps/confbridge/conf_config_parser.c
--- asterisk-base-11.3.0/apps/confbridge/conf_config_parser.c	2022-03-16 15:19:54.558295971 +0000
+++ asterisk-11.3.0/apps/confbridge/conf_config_parser.c	2022-03-16 15:47:14.777858020 +0000
@@ -1315,7 +1315,7 @@
 	aco_option_register(&cfg_info, "denoise", ACO_EXACT, user_types, "no", OPT_BOOLFLAG_T, 1, FLDSET(struct user_profile, flags), USER_OPT_DENOISE);
 	aco_option_register(&cfg_info, "dsp_drop_silence", ACO_EXACT, user_types, "no", OPT_BOOLFLAG_T, 1, FLDSET(struct user_profile, flags), USER_OPT_DROP_SILENCE);
 	aco_option_register(&cfg_info, "dsp_silence_threshold", ACO_EXACT, user_types, __stringify(DEFAULT_SILENCE_THRESHOLD), OPT_UINT_T, 0, FLDSET(struct user_profile, silence_threshold));
-	aco_option_register(&cfg_info, "dsp_talking_threshold", ACO_EXACT, user_types, __stringify(DEFAULT_TALKING_THRESHOLD), OPT_UINT_T, 0, FLDSET(struct user_profile, silence_threshold));
+	aco_option_register(&cfg_info, "dsp_talking_threshold", ACO_EXACT, user_types, __stringify(DEFAULT_TALKING_THRESHOLD), OPT_UINT_T, 0, FLDSET(struct user_profile, talking_threshold));
 	aco_option_register(&cfg_info, "jitterbuffer", ACO_EXACT, user_types, "no", OPT_BOOLFLAG_T, 1, FLDSET(struct user_profile, flags), USER_OPT_JITTERBUFFER);
 	/* This option should only be used with the CONFBRIDGE dialplan function */
 	aco_option_register_custom(&cfg_info, "template", ACO_EXACT, user_types, NULL, user_template_handler, 0);
diff --exclude='*.xml' --exclude='*.o.d' --exclude=.project --exclude=.cproject -Naur asterisk-base-11.3.0/apps/wms_inoapi.c asterisk-11.3.0/apps/wms_inoapi.c
--- asterisk-base-11.3.0/apps/wms_inoapi.c	2022-03-16 15:19:54.559295996 +0000
+++ asterisk-11.3.0/apps/wms_inoapi.c	2022-03-16 15:43:51.929869874 +0000
@@ -865,18 +865,45 @@
    snprintf(execCmd, sizeof(execCmd), "%d", chan_vars->conference.id);
    if ((app = pbx_findapp("ConfBridge"))) // application found// AGI RELATED
    {
-      ast_func_write(chan, "CONFBRIDGE(user,announce_only_user)", "no");
-      ast_func_write(chan, "CONFBRIDGE(user,quiet)", "yes");
+      /* Use default_bridge as a starting point 
+       * To use another profile you must inidcate the profile, e.g "wms_bridge"
+       * ast_func_write(chan, "CONFBRIDGE(bridge,template)", "wms_bridge");
+       */
+      ast_func_write(chan, "CONFBRIDGE(bridge,template)", "");
+      if (option_verbose >= 3)
+         ast_verbose(VERBOSE_PREFIX_3 "Set bridge profile [default_bridge] from conference %d on channel %s\n", chan_vars->conference.id, ast_channel_name(chan));
+
+      /* Use default_user as a starting point 
+       * To use another profile you must inidcate the profile, e.g "wms_user"
+       * ast_func_write(chan, "CONFBRIDGE(user,template)", "wms_user");
+       */
+      ast_func_write(chan, "CONFBRIDGE(user,template)", "");
+      if (option_verbose >= 3)
+         ast_verbose(VERBOSE_PREFIX_3 "Set user profile [default_user] from conference %d on channel %s\n", chan_vars->conference.id, ast_channel_name(chan));
+
       //only if F in chan_vars->conference.args
       if (strstr(chan_vars->conference.args, "F"))
+      {
          ast_func_write(chan, "CONFBRIDGE(user,dtmf_passthrough)", "yes");
+         if (option_verbose >= 3)
+            ast_verbose(VERBOSE_PREFIX_3 "Set dtmf_passthrough [yes] from conference %d on channel %s\n", chan_vars->conference.id, ast_channel_name(chan));
+      }
 
       if (strlen(ast_channel_conf_record(chan)) != 0)
       {
          ast_func_write(chan, "CONFBRIDGE(bridge,record_conference)", "yes");
+         if (option_verbose >= 3)
+            ast_verbose(VERBOSE_PREFIX_3 "Set record_conference [yes] from conference %d on channel %s\n", chan_vars->conference.id, ast_channel_name(chan));
+
          snprintf(filename, sizeof(filename), "%s.%s", ast_channel_conf_record(chan), ast_channel_conf_record_format(chan));
 	 ast_func_write(chan, "CONFBRIDGE(bridge,video_mode)", "follow_talker");
+         if (option_verbose >= 3)
+            ast_verbose(VERBOSE_PREFIX_3 "Set video_mode [follow_talker] from conference %d on channel %s\n", chan_vars->conference.id, ast_channel_name(chan));
+
          ast_func_write(chan, "CONFBRIDGE(bridge,record_file)", filename);
+         if (option_verbose >= 3)
+            ast_verbose(VERBOSE_PREFIX_3 "Set record_file [%s] from conference %d on channel %s\n", filename, chan_vars->conference.id, ast_channel_name(chan));
+
          ast_channel_lock(chan);
          ast_set_flag(ast_channel_conf_rec_flags(chan), CONF_REC_ACTIVE);
          ast_channel_unlock(chan);
