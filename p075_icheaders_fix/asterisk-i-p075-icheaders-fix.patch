diff --exclude='*.xml' --exclude='*.o.d' --exclude=.project --exclude=.cproject -Naur asterisk-base-11.3.0/channels/chan_sip.c asterisk-11.3.0/channels/chan_sip.c
--- asterisk-base-11.3.0/channels/chan_sip.c	2021-01-08 14:56:39.120961000 +0000
+++ asterisk-11.3.0/channels/chan_sip.c	2021-01-08 18:07:19.726888000 +0000
@@ -19018,9 +19018,10 @@
 static int get_headers(struct sip_pvt *p, struct sip_request *oreq)
 {
    struct sip_request *req;
-   int i;
-   char buffer[64];
+   int i, start;
+   char buffer[2048];
    char tmp[2048];
+   char *aux;
 
    req = oreq;
    if (!req)
@@ -19053,25 +19054,34 @@
    {
       for(i = 0; i < global_number_ic_headers; i++)
       {
-         snprintf(buffer, sizeof(buffer), "%s", sip_get_header(req, global_ic_headers[i]));
-
-         if(buffer[0] != '\0')
+         start=0;
+         ast_log(LOG_WARNING, "START GET HEADERS!\n");
+         do
          {
-            if (strlen(p->ic_extra_data) + strlen(buffer) < sizeof(p->ic_extra_data))
+            aux=__get_header(req, global_ic_headers[i], &start);
+            ast_log(LOG_WARNING, "IDX: %d, HEADER: %s: %s\n", start, global_ic_headers[i], aux);
+            snprintf(buffer, sizeof(buffer), "%s", aux);
+            ast_log(LOG_WARNING, "Buffer: %s\n", buffer);
+
+            if(buffer[0] != '\0')
             {
-               if (p->ic_extra_data[0] == '\0') sprintf(p->ic_extra_data, "%s: %s", global_ic_headers[i], buffer);
+            ast_log(LOG_WARNING, "Inside\n");
+               if (strlen(p->ic_extra_data) + strlen(buffer) < sizeof(p->ic_extra_data))
+               {
+                  if (p->ic_extra_data[0] == '\0') sprintf(p->ic_extra_data, "%s: %s", global_ic_headers[i], buffer);
+                  else
+                  {
+                     snprintf(tmp, sizeof(tmp),"%s%c%s: %s", p->ic_extra_data, 29, global_ic_headers[i], buffer);
+                     snprintf(p->ic_extra_data, sizeof(p->ic_extra_data), "%s", tmp);
+                  }
+               }
                else
                {
-                  snprintf(tmp, sizeof(tmp),"%s%c%s: %s", p->ic_extra_data, 29, global_ic_headers[i], buffer);
-                  snprintf(p->ic_extra_data, sizeof(p->ic_extra_data), "%s", tmp);
+                  ast_log(LOG_WARNING, "Extra data too long!\n");
+                  return -1;
                }
             }
-            else
-            {
-               ast_log(LOG_WARNING, "Extra data too long!\n");
-               return -1;
-            }
-         }
+         }while(strcmp(aux, "")!=0);
       }
    }
    if(global_number_ic_headers >= 0)
@@ -34239,7 +34249,7 @@
 		      global_nature_calling = 0x03;
 		   }
 		} else if(!strcasecmp(v->name, "icheaders")){ //Check what incoming call headers are needed
-		      char buf[64];
+		      char buf[512];
 		   char *word, *next = buf;
 
 		   ast_copy_string(buf, v->value, sizeof(buf));
